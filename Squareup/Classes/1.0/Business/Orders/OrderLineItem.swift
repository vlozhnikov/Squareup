//
//  OrderLineItem.swift
//  Squareup
//
//  Created by Vladimir Lozhnikov on 9.06.23.
//

import Foundation

/// - OrderLineItem: Represents a line item in an order.
/// Each line item describes a different product to purchase, with its own quantity and price details.
/// https://developer.squareup.com/reference/square/objects/OrderLineItem
open class OrderLineItem: Codable {
    
    /// - UID: A unique ID that identifies the line item only within this order.
    /// Max Length 60
    public var UID: String?
    /// - Name: The name of the line item.
    /// Max Length 512
    public var Name: String?
    /// - Quantity: The quantity purchased, formatted as a decimal number. For example, "3".
    /// Line items with a quantity of "0" are automatically removed when paying for or otherwise completing the order.
    /// Line items with a quantity_unit can have non-integer quantities. For example, "1.70000".
    /// Min Length 1
    /// Max Length 2
    public var Quantity: String?
    /// - QuantityUnit: The unit and precision that this line item's quantity is measured in.
    public var QuantityUnit: OrderQuantityUnit?
    /// - Note: The note of the line item.
    /// Max Length 2000
    public var Note: String?
    /// - CatalogObjectId: The CatalogItemVariation ID applied to this line item.
    /// Max Length 192
    public var CatalogObjectId: String?
    /// - CatalogVersion: The version of the catalog object that this line item references.
    public var CatalogVersion: Int?
    /// - VariationName: The name of the variation applied to this line item.
    /// Max Length 400
    public var VariationName: String?
    /// - ItemType: The type of line item: an itemized sale, a non-itemized sale (custom amount), or the activation or reloading of a gift card.
    public var ItemType: OrderLineItemItemType?
    /// - Metadata: Application-defined data attached to this line item. Metadata fields are intended to store descriptive references or associations with an entity in another system or store brief information about the object. Square does not process this field; it only stores and returns it in relevant API calls. Do not use metadata to store any sensitive information (such as personally identifiable information or card details).
    ///
    /// Keys written by applications must be 60 characters or less and must be in the character set [a-zA-Z0-9_-]. Entries can also include metadata generated by Square. These keys are prefixed with a namespace, separated from the key with a ':' character.
    ///
    /// Values have a maximum length of 255 characters.
    ///
    /// An application can have up to 10 entries per metadata field.
    ///
    /// Entries written by applications are private and can only be read or modified by the same application.
    ///
    /// For more information, see Metadata.
    public var Metadata: [String: String]?
    /// - Modifiers: The CatalogModifiers applied to this line item.
    public var Modifiers: [OrderLineItemModifier]?
    /// - AppliedTaxes: The list of references to taxes applied to this line item. Each OrderLineItemAppliedTax has a tax_uid that references the uid of a top-level OrderLineItemTax applied to the line item. On reads, the amount applied is populated.
    ///
    /// An OrderLineItemAppliedTax is automatically created on every line item for all ORDER scoped taxes added to the order. OrderLineItemAppliedTax records for LINE_ITEM scoped taxes must be added in requests for the tax to apply to any line items.
    ///
    /// To change the amount of a tax, modify the referenced top-level tax.
    public var AppliedTaxes: [OrderLineItemAppliedTax]?
    /// - AppliedDiscounts: The list of references to discounts applied to this line item. Each OrderLineItemAppliedDiscount has a discount_uid that references the uid of a top-level OrderLineItemDiscounts applied to the line item. On reads, the amount applied is populated.
    ///
    /// An OrderLineItemAppliedDiscount is automatically created on every line item for all ORDER scoped discounts that are added to the order. OrderLineItemAppliedDiscount records for LINE_ITEM scoped discounts must be added in requests for the discount to apply to any line items.
    ///
    /// To change the amount of a discount, modify the referenced top-level discount.
    public var AppliedDiscounts: [OrderLineItemAppliedDiscount]?
    /// - AppliedServiceCharges: The list of references to service charges applied to this line item. Each OrderLineItemAppliedServiceCharge has a service_charge_id that references the uid of a top-level OrderServiceCharge applied to the line item. On reads, the amount applied is populated.
    /// To change the amount of a service charge, modify the referenced top-level service charge.
    public var AppliedServiceCharges: [OrderLineItemAppliedServiceCharge]?
    /// - BasePriceMoney: The base price for a single unit of the line item.
    public var BasePriceMoney: Money?
    /// - VariationTotalPriceMoney: Read only The total price of all item variations sold in this line item. The price is calculated as base_price_money multiplied by quantity. It does not include modifiers.
    public var VariationTotalPriceMoney: Money?
    /// - GrossSalesMoney: Read only The amount of money made in gross sales for this line item. The amount is calculated as the sum of the variation's total price and each modifier's total price.
    public var GrossSalesMoney: Money?
    /// - TotalTaxMoney: Read only The total amount of tax money to collect for the line item.
    public var TotalTaxMoney: Money?
    /// - TotalDiscountMoney: Read only The total amount of discount money to collect for the line item.
    public var TotalDiscountMoney: Money?
    /// - TotalMoney: Read only The total amount of money to collect for this line item.
    public var TotalMoney: Money?
    /// - PricingBlocklists: Describes pricing adjustments that are blocked from automatic application to a line item. For more information, see Apply Taxes and Discounts.
    public var PricingBlocklists: OrderLineItemPricingBlocklists?
    /// - TotalServiceChargeMoney: Read only The total amount of apportioned service charge money to collect for the line item.
    public var TotalServiceChargeMoney: Money?
    
    enum CodingKeys: String, CodingKey {
        case UID = "uid"
        case Name = "name"
        case Quantity = "quantity"
        case QuantityUnit = "quantity_unit"
        case Note = "note"
        case CatalogObjectId = "catalog_object_id"
        case CatalogVersion = "catalog_version"
        case VariationName = "variation_name"
        case ItemType = "item_type"
        case Metadata = "metadata"
        case Modifiers = "modifiers"
        case AppliedTaxes = "applied_taxes"
        case AppliedDiscounts = "applied_discounts"
        case AppliedServiceCharges = "applied_service_charges"
        case BasePriceMoney = "base_price_money"
        case VariationTotalPriceMoney = "variation_total_price_money"
        case GrossSalesMoney = "gross_sales_money"
        case TotalTaxMoney = "total_tax_money"
        case TotalDiscountMoney = "total_discount_money"
        case TotalMoney = "total_money"
        case PricingBlocklists = "pricing_blocklists"
        case TotalServiceChargeMoney = "total_service_charge_money"
    }
}
